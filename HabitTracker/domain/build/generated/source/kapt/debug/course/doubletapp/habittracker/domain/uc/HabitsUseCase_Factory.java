// Generated by Dagger (https://dagger.dev).
package course.doubletapp.habittracker.domain.uc;

import course.doubletapp.habittracker.domain.repository.IRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HabitsUseCase_Factory implements Factory<HabitsUseCase> {
  private final Provider<IRepository> repositoryProvider;

  public HabitsUseCase_Factory(Provider<IRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public HabitsUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static HabitsUseCase_Factory create(Provider<IRepository> repositoryProvider) {
    return new HabitsUseCase_Factory(repositoryProvider);
  }

  public static HabitsUseCase newInstance(IRepository repository) {
    return new HabitsUseCase(repository);
  }
}
