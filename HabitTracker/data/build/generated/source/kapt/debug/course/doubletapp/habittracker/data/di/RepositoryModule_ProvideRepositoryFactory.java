// Generated by Dagger (https://dagger.dev).
package course.doubletapp.habittracker.data.di;

import course.doubletapp.habittracker.data.db.HabitDao;
import course.doubletapp.habittracker.data.network.HabitServerAPI;
import course.doubletapp.habittracker.domain.repository.IRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryModule_ProvideRepositoryFactory implements Factory<IRepository> {
  private final RepositoryModule module;

  private final Provider<HabitDao> habitDaoProvider;

  private final Provider<HabitServerAPI> habitAPIProvider;

  public RepositoryModule_ProvideRepositoryFactory(RepositoryModule module,
      Provider<HabitDao> habitDaoProvider, Provider<HabitServerAPI> habitAPIProvider) {
    this.module = module;
    this.habitDaoProvider = habitDaoProvider;
    this.habitAPIProvider = habitAPIProvider;
  }

  @Override
  public IRepository get() {
    return provideRepository(module, habitDaoProvider.get(), habitAPIProvider.get());
  }

  public static RepositoryModule_ProvideRepositoryFactory create(RepositoryModule module,
      Provider<HabitDao> habitDaoProvider, Provider<HabitServerAPI> habitAPIProvider) {
    return new RepositoryModule_ProvideRepositoryFactory(module, habitDaoProvider, habitAPIProvider);
  }

  public static IRepository provideRepository(RepositoryModule instance, HabitDao habitDao,
      HabitServerAPI habitAPI) {
    return Preconditions.checkNotNullFromProvides(instance.provideRepository(habitDao, habitAPI));
  }
}
