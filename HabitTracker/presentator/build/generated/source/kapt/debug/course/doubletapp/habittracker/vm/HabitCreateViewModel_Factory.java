// Generated by Dagger (https://dagger.dev).
package course.doubletapp.habittracker.vm;

import course.doubletapp.habittracker.domain.uc.HabitsUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HabitCreateViewModel_Factory implements Factory<HabitCreateViewModel> {
  private final Provider<HabitsUseCase> useCaseProvider;

  public HabitCreateViewModel_Factory(Provider<HabitsUseCase> useCaseProvider) {
    this.useCaseProvider = useCaseProvider;
  }

  @Override
  public HabitCreateViewModel get() {
    return newInstance(useCaseProvider.get());
  }

  public static HabitCreateViewModel_Factory create(Provider<HabitsUseCase> useCaseProvider) {
    return new HabitCreateViewModel_Factory(useCaseProvider);
  }

  public static HabitCreateViewModel newInstance(HabitsUseCase useCase) {
    return new HabitCreateViewModel(useCase);
  }
}
