// Generated by Dagger (https://dagger.dev).
package course.doubletapp.habittracker.ui.habitcreate;

import course.doubletapp.habittracker.vm.HabitCreateViewModel;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HabitCreateFragment_MembersInjector implements MembersInjector<HabitCreateFragment> {
  private final Provider<HabitCreateViewModel> habitCreateViewModelProvider;

  public HabitCreateFragment_MembersInjector(
      Provider<HabitCreateViewModel> habitCreateViewModelProvider) {
    this.habitCreateViewModelProvider = habitCreateViewModelProvider;
  }

  public static MembersInjector<HabitCreateFragment> create(
      Provider<HabitCreateViewModel> habitCreateViewModelProvider) {
    return new HabitCreateFragment_MembersInjector(habitCreateViewModelProvider);
  }

  @Override
  public void injectMembers(HabitCreateFragment instance) {
    injectHabitCreateViewModel(instance, habitCreateViewModelProvider.get());
  }

  @InjectedFieldSignature("course.doubletapp.habittracker.ui.habitcreate.HabitCreateFragment.habitCreateViewModel")
  public static void injectHabitCreateViewModel(HabitCreateFragment instance,
      HabitCreateViewModel habitCreateViewModel) {
    instance.habitCreateViewModel = habitCreateViewModel;
  }
}
