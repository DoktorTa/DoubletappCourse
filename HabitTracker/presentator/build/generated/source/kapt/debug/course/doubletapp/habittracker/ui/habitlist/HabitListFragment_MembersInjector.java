// Generated by Dagger (https://dagger.dev).
package course.doubletapp.habittracker.ui.habitlist;

import course.doubletapp.habittracker.vm.HabitListViewModelFactory;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HabitListFragment_MembersInjector implements MembersInjector<HabitListFragment> {
  private final Provider<HabitListViewModelFactory> habitListViewModelFactoryProvider;

  public HabitListFragment_MembersInjector(
      Provider<HabitListViewModelFactory> habitListViewModelFactoryProvider) {
    this.habitListViewModelFactoryProvider = habitListViewModelFactoryProvider;
  }

  public static MembersInjector<HabitListFragment> create(
      Provider<HabitListViewModelFactory> habitListViewModelFactoryProvider) {
    return new HabitListFragment_MembersInjector(habitListViewModelFactoryProvider);
  }

  @Override
  public void injectMembers(HabitListFragment instance) {
    injectHabitListViewModelFactory(instance, habitListViewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("course.doubletapp.habittracker.ui.habitlist.HabitListFragment.habitListViewModelFactory")
  public static void injectHabitListViewModelFactory(HabitListFragment instance,
      HabitListViewModelFactory habitListViewModelFactory) {
    instance.habitListViewModelFactory = habitListViewModelFactory;
  }
}
