// Generated by view binder compiler. Do not edit!
package course.doubletapp.habittracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import course.doubletapp.habittracker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HabitItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View colorHabit;

  @NonNull
  public final TextView descriptionHabit;

  @NonNull
  public final TextView infoHabit;

  @NonNull
  public final TextView nameHabit;

  private HabitItemBinding(@NonNull ConstraintLayout rootView, @NonNull View colorHabit,
      @NonNull TextView descriptionHabit, @NonNull TextView infoHabit,
      @NonNull TextView nameHabit) {
    this.rootView = rootView;
    this.colorHabit = colorHabit;
    this.descriptionHabit = descriptionHabit;
    this.infoHabit = infoHabit;
    this.nameHabit = nameHabit;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HabitItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HabitItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.habit_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HabitItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.colorHabit;
      View colorHabit = ViewBindings.findChildViewById(rootView, id);
      if (colorHabit == null) {
        break missingId;
      }

      id = R.id.descriptionHabit;
      TextView descriptionHabit = ViewBindings.findChildViewById(rootView, id);
      if (descriptionHabit == null) {
        break missingId;
      }

      id = R.id.infoHabit;
      TextView infoHabit = ViewBindings.findChildViewById(rootView, id);
      if (infoHabit == null) {
        break missingId;
      }

      id = R.id.nameHabit;
      TextView nameHabit = ViewBindings.findChildViewById(rootView, id);
      if (nameHabit == null) {
        break missingId;
      }

      return new HabitItemBinding((ConstraintLayout) rootView, colorHabit, descriptionHabit,
          infoHabit, nameHabit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
